<?php

declare(strict_types=1);

namespace Plugin\Landswitcher\Models;

use Exception;
use JTL\Model\DataAttribute;
use JTL\Model\DataModel;
use JTL\DB\DbInterface;
use Illuminate\Support\Collection;
use Shop;

/**
 * Class ModelRedirect
 * This class is generated by shopcli model:create
 */
final class ModelRedirect extends DataModel
{
    /**
     * @inheritdoc
     */


    public function getTableName(): string
    {
        return 'landswitcher_redirects';
    }

    /**
     * Setting of keyname is not supported!
     * Call will always throw an Exception with code ERR_DATABASE!
     * @inheritdoc
     */
    public function setKeyName($keyName): void
    {
        throw new Exception(__METHOD__ . ': setting of keyname is not supported', self::ERR_DATABASE);
    }

    public function getAttributes(): array
    {
        static $attributes = null;
        if ($attributes === null) {
            $attributes = [];
            
            $id = DataAttribute::create('id', 'int', null, false, true);
            $id->getInputConfig()->setModifyable(false);
            $id->getInputConfig()->setHidden(true);
            $attributes['id'] = $id;
            
            $attributes['url'] = DataAttribute::create('url', 'varchar', null, false, false);

            $country = DataAttribute::create('country', 'varchar', null, false, false);
            $country->getInputConfig()->setAllowedValues(self::getCountries(Shop::Container()->getDB()));
            $attributes['country'] = $country;
        }

        return $attributes;
    }

    private static function getCountries(DbInterface $db): array
    {
        $arCountries = [];
        foreach (ModelCountry::loadAll($db, [], []) as $countryItem)
            $arCountries[$countryItem->CISO] = $countryItem->name;
        return $arCountries;
    }

    public static function loadAll(DbInterface $db, $key, $value): Collection
    {
        $result = parent::loadAll($db, [], []);
        
        $arCountries = self::getCountries($db);
        
        foreach ($result as $rez) $rez->country = $arCountries[$rez->country];

        return $result;
    }
}
